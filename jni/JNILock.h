/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class de_uniduesseldorf_dxram_utils_locks_JNILock */

#ifndef _Included_de_uniduesseldorf_dxram_utils_locks_JNILock
#define _Included_de_uniduesseldorf_dxram_utils_locks_JNILock
#ifdef __cplusplus
extern "C" {
#endif

/*
 * Class:     de_uniduesseldorf_dxram_utils_locks_JNILock
 * Method:    readLock
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_uniduesseldorf_dxram_utils_locks_JNILock_readLock(JNIEnv *, jclass, jlong);

/*
 * Class:     de_uniduesseldorf_dxram_utils_locks_JNILock
 * Method:    readUnlock
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_uniduesseldorf_dxram_utils_locks_JNILock_readUnlock(JNIEnv *, jclass, jlong);

/*
 * Class:     de_uniduesseldorf_dxram_utils_locks_JNILock
 * Method:    tryReadLock
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_uniduesseldorf_dxram_utils_locks_JNILock_tryReadLock(JNIEnv *, jclass, jlong);

/*
 * Class:     de_uniduesseldorf_dxram_utils_locks_JNILock
 * Method:    writeLock
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_uniduesseldorf_dxram_utils_locks_JNILock_writeLock(JNIEnv *, jclass, jlong);

/*
 * Class:     de_uniduesseldorf_dxram_utils_locks_JNILock
 * Method:    writeUnlock
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_uniduesseldorf_dxram_utils_locks_JNILock_writeUnlock(JNIEnv *, jclass, jlong);

/*
 * Class:     de_uniduesseldorf_dxram_utils_locks_JNILock
 * Method:    tryWriteLock
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_uniduesseldorf_dxram_utils_locks_JNILock_tryWriteLock(JNIEnv *, jclass, jlong);

/*
 * Class:     de_uniduesseldorf_dxram_utils_locks_JNILock
 * Method:    lock
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_uniduesseldorf_dxram_utils_locks_JNILock_lock(JNIEnv *, jclass, jlong);

/*
 * Class:     de_uniduesseldorf_dxram_utils_locks_JNILock
 * Method:    unlock
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_uniduesseldorf_dxram_utils_locks_JNILock_unlock(JNIEnv *, jclass, jlong);

/*
 * Class:     de_uniduesseldorf_dxram_utils_locks_JNILock
 * Method:    tryLock
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_de_uniduesseldorf_dxram_utils_locks_JNILock_tryLock(JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
