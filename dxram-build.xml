<?xml version="1.0" encoding="UTF-8"?>

<project name="dxram" basedir="." default="release">
    <import file="dxram-build-config.xml"/>

    <target name="all"
            depends="clean-all, create_base_dirs, copy_libs, copy_jni, copy_config, copy_script, create_log, compile-debug, compile-release,
             compile-performance"
            description="builds all files"/>
    <target name="debug"
            depends="clean-all, create_base_dirs, copy_libs, copy_jni, copy_config, copy_script, create_log, compile-debug"
            description="builds dxram-debug.jar (contains all logger calls)"/>
    <target name="release"
            depends="clean-all, create_base_dirs, copy_libs, copy_jni, copy_config, copy_script, create_log, compile-release"
            description="builds dxram-release-jar"/>
    <target name="performance"
            depends="clean-all, create_base_dirs, copy_libs, copy_jni, copy_config, copy_script, create_log, compile-performance"
            description="builds dxram-performance.jar (without any logger calls)"/>

    <target name="clean-all" description="removes all created files and folders">
        <delete dir="${build_proj_dir}" failonerror="false"/>
    </target>

    <target name="create_base_dirs" description="creates necessary folders">
        <mkdir dir="${build_dir}"/>
        <mkdir dir="${build_proj_dir}"/>
    </target>

    <target name="copy_libs" depends="create_base_dirs" description="copies the libs">
        <copy todir="${build_proj_lib_dir}">
            <fileset dir="${lib_dir}">
                <include name="*.jar"/>
            </fileset>
        </copy>
    </target>

    <target name="copy_jni" depends="create_base_dirs" description="copies the jni libs">
        <copy todir="${build_proj_jni_dir}">
            <fileset dir="${jni_dir}">
                <include name="*.so"/>
                <include name="*.dylib"/>
            </fileset>
        </copy>
    </target>

    <target name="copy_config" depends="create_base_dirs" description="copies the config files">
        <mkdir dir="${build_proj_conf_dir}"/>
        <copy todir="${build_proj_conf_dir}">
            <fileset dir="${conf_dir}">
                <include name="**/*.xml"/>
                <include name="**/*.json"/>
            </fileset>
        </copy>
    </target>

    <target name="copy_script" depends="create_base_dirs" description="copies the script files">
        <mkdir dir="${build_proj_script_dir}"/>
        <copy todir="${build_proj_script_dir}">
            <fileset dir="${script_dir}"/>
        </copy>
        <copy file="${basedir}/env.sh" tofile="${build_proj_dir}/env.sh"/>
    </target>

    <target name="create_log" depends="create_base_dirs" description="creates the log directory">
        <mkdir dir="${build_proj_log_dir}"/>
    </target>

    <target name="compile-debug" depends="create_base_dirs" description="builds class files, debug build">
        <ant antfile="dxram-core-build.xml" target="debug"/>
        <ant antfile="dxram-apps-build.xml" target="debug"/>
    </target>

    <target name="compile-release" depends="create_base_dirs" description="builds class files, release build">
        <ant antfile="dxram-core-build.xml" target="release"/>
        <ant antfile="dxram-apps-build.xml" target="release"/>
    </target>

    <target name="compile-performance" depends="create_base_dirs" description="builds class files, performance build">
        <ant antfile="dxram-core-build.xml" target="performance"/>
        <ant antfile="dxram-apps-build.xml" target="performance"/>
    </target>
</project>
